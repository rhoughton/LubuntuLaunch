Very broad term here "tech" so expect programming, OS, hardware, etc to pop up
* Lecture on COM
** What does this binary component's acronym stand for? 
*** component object model 
** COM's are similar to what concept?
*** widgets! ...or classes on steroids
** Who created CORBA?
*** OMG - object model group...
** IDL? 
*** interface description language
** What does the design pattern "proxy" or "stub" do? 
***  lets the program in Java talk to it to relay that to the skeleton or another proxy?
*** good analogy: german speaker can talk to a german/english speaker to speak to a japanese/english speaker who in turn can relay that to a pure japanese speaker.
** What does ORB stand for?
*** object request broker
** What's IIOP?
*** internet-inter-orb-protocol
** RMI?
*** remote method invocation (b/c of competing standards....)
*** enterprise Java beans (ejb) go beyond this to encapsulate additional functionality
** What are transactions?
*** a sequence of transactions with certain properties that are true, (4 properties)
** Love the ending: "This is what gives software designers nightmares at night"
*** getting this thing up and stable; proxy working, orb working, network working, servers orb and proxy working
* Chili - 3d directX graphics COM
** At its most basic level, what is DirectX?
*** a number of COM objects
** What does a DirectX function call do?
*** 'indirectly' creates a COM object by passing the addr of an interface pointer to the function
**** binary compatability?
**** C++ is designed to reuse software components via source code, not binary objects.
** What does it mean for a program to be "compiled as a DLL?"
*** ?
** What must the language support, in order to work with COM?
*** function pointers
** What does every COM object have? 
*** an ID, you pass that to a Factory that looks it up in a Central Registry to create
** What's returned by the factory?
*** a handle or interface to the created COM object
** Explain how COM supports polymorphism?
*** b/c COM uses interfaces, as long as those stay the same the backend code can change and all is good
** How does COM support distributed systems?
*** you create COM objects on remote servers and execute from the client
** Is depth good to have in your inheritance tree?
*** generally, no
** 
** 
** 
** 
** 
** 
** 
** 
